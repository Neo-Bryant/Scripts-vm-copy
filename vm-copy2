#!/bin/bash 
vmpicture (){
cat << EOF
               #########                       
              ############                     
              #############                    
             ##  ###########                   
            ###  ###### #####                  
            ### #######   ####                 
           ###  ########## ####                
          ####  ########### ####               
        #####   ###########  #####             
       ######   ### ########   #####           
       #####   ###   ########   ######         
      ######   ###  ###########   ######       
     ######   #### ##############  ######      
    #######  ##################### #######     
    #######  ##############################    
   #######  ###### ################# #######   
   #######  ###### ###### #########   ######   
   #######    ##  ######   ######     ######   
   #######        ######    #####     #####    
    ######        #####     #####     ####     
     #####        ####      #####     ###      
      #####       ###        ###      #        
        ##       ####        ####              
      -------------------------------
        THIS IS A VIRTUAL MACHINE   
      -------------------------------
EOF
}
mk_env () {
	echo -e "\033[31m""检测到系统尚未部署脚本运行所需模板文件!请按照提示完成环境部署!""\033[39m"
	echo -e "----------------------------------------------------------------------------------------------
""\033[33m""系统磁盘镜像目录(/var/lib/libvirt/images/)文件：""\033[39m"
	ls -A /var/lib/libvirt/images/
	echo "----------------------------------------------------------------------------------------------"
	read -p "请选择一个干净的磁盘镜像文件(*.img)做为模板(建议使用全新虚拟机的)，并输入该文件全名：" img
	cp /var/lib/libvirt/images/{${img},.qemu_base.img} || exit
	cp /root/Scripts-vm-copy/qemu-demo.xml /var/lib/libvirt/images/.qemu_base.xml
	ln -s /root/Scripts-vm-copy/vm-copy2 /usr/bin/
	echo -e "\033[33m""'vm-copy2'环境部署完成！可直接在命令行执行""\033[39m"
}
[ ! -e /var/lib/libvirt/images/.qemu_base.img ] && mk_env

while :
do
    read -p "请输入新增虚拟机名称:" virtname
	[ -z $virtname ] && echo -e "\033[31m虚拟机名称不能为空!\033[39m" && continue
	break
done
if [ -e /var/lib/libvirt/images/$virtname.img ] || [ -e /etc/libvirt/qemu/$virtname.xml ];then
    echo -e "\033[31m警告:虚拟机$virtname已存在(请检查/var/lib/libvirt/images/$virtname.img和/etc/libvirt/qemu/$virtname.xml是否已经存在)\033[39m"
    exit 123
fi

read -p "请输入虚拟机的主机名(默认与虚拟机名称相同): " hostname
[ -z $hostname ] && hostname=$virtname          #设置主机名默认值
ifchoose () {
	while :
	do
	    read -p "请选择网卡(eth0|eth1|eth2|eth3,默认eth0): " ifname
	    ifname=${ifname:=eth0}    #默认网卡设置
		[ -z $(echo $ifname | grep eth[0-3]) ] && echo -e "\033[31m""网卡名不符合要求!""\033[39m" && continue   #网卡合法性检测
		break
	done
}
ifchoose
inte=$ifname

ipsetup () {
	while :
	do
	    read -p "请设置IP地址（格式：IP/子掩(8/16/24))：" IP
	    pip=${IP%%/*}			#去尾，得到纯ip地址
	    [ -z $(echo $pip | sed -nr '/^((2[0-4][0-9]|25[0-5]|[01]?[0-9]?[0-9])\.){3}(2[0-4][0-9]|25[0-4]|[01]?[0-9]?[0-9])$/p') ] && echo -e "\033[31m""IP不符合规范!""\033[39m" && continue
		iprange=${pip%%.*}		#去尾，得到IP所在范围（A：1-127，B：128-191，C：192-223，D：224-239，E：240-254）
	    sbmask=${IP##*/}		#掐头，得到子网掩码（8/16/24/32）
		[ $iprange -ge 1 -a $iprange -le 127 ] && sm=8
		[ $iprange -ge 128 -a $iprange -le 191 ] && sm=16
		[ $iprange -ge 192 -a $iprange -le 223 ] && sm=24
		[ ! "$sbmask" == "$sm" ] && echo -e "\033[31m""子网掩码缺失或异常!""\033[39m" && continue	#检测子网掩码的合法性
		break
	done
}
ipsetup
ip=$pip
submask=$sbmask
yum_baseip=${ip%.*}.254

brgsetup () {
	while :
	do
		read -p "是否桥接外网?(y|n,默认为n)" br_an
		br_an=${br_an:-n}
		[ "$br_an" == "y" ] && brg_val=yes && break
		[ "$br_an" == "n" ] && brg_val=no && break
		echo -e "\033[31m""输入内容不符合要求!""\033[39m"
	done
}
brgsetup
brg=$brg_val

while :
do     
    read -p "是否需要设置另一张网卡?(y|n,默认为n)" ans
    ans=${ans:-n}
    case $ans in
    y)
		while :
		do
			ifchoose
			inte2=$ifname
			[ "$inte2" == "$inte" ] && echo -e "\033[31m""该网卡已被使用!""\033[39m" && continue
			break
		done
		while :
		do
			ipsetup
			ip2=$pip
			submask2=$sbmask
			yum_baseip2=${ip2%.*}.254
			[ "$ip2" == "$ip" ] && echo -e "\033[31m""IP设置重复!""\033[39m" && continue 
			break
		done
		break;;
    n)
        break;;
    *)
        echo -e "\033[31m""输入内容不匹配!""\033[39m";;
    esac
done

#复制一份磁盘的镜像文件:
cp /var/lib/libvirt/images/{.qemu_base,${virtname}}.img && echo -e "虚拟机$virtname -----> \033[33m"磁盘文件准备完成"\033[39m"

#复制一份虚拟机的xml配置文件:
cp /var/lib/libvirt/images/.qemu_base.xml /etc/libvirt/qemu/${virtname}.xml && echo -e "虚拟机$virtname -----> \033[33m"xml文件准备完成"\033[39m"

#挂载虚拟磁盘,完成预配置,格式:guestmount -a 虚拟机磁盘路径 -i /挂载点
remov () {
	rm -rf /opt/tmp-tmp/
	rm -rf /var/lib/libvirt/images/${virtname}.img
	rm -rf /etc/libvirt/qemu/${virtname}.xml
}
mkdir /opt/tmp-tmp/    #创建挂载点
which guestmount &> /dev/null
[ $? -ne 0 ] && remov && echo -e "\033[31mguestmount缺失，请确认libguestfs和libguestfs-tools是否已安装\033[39m" && exit 12
guestmount -a /var/lib/libvirt/images/${virtname}.img -i /opt/tmp-tmp &> /dev/null #挂载镜像磁盘文件
[ $? -ne 0 ] && remov && echo -e "\033[31mguestmount命令存在问题,无法正常运行\033[39m" && exit 23 	#判断是否正常执行

#配置主机名:
echo $hostname > /opt/tmp-tmp/etc/hostname && echo -e "虚拟机$virtname -----> \033[33m"主机名配置完成:$hostname"\033[39m"

#配置IP和子掩:
echo "TYPE=Ethernet
BOOTPROTO="static"
NAME=$inte
DEVICE=$inte
ONBOOT=yes
IPADDR=$ip
PREFIX=$submask" > /opt/tmp-tmp/etc/sysconfig/network-scripts/ifcfg-$inte && echo -e "虚拟机$virtname -----> \033[33m"IP地址配置完成:${inte}:$ip/$submask"\033[39m"
[ "$brg" == "yes" ] && echo "GATEWAY=$yum_baseip" >> /opt/tmp-tmp/etc/sysconfig/network-scripts/ifcfg-$inte && echo -e "虚拟机$virtname -----> \033[33m"网关配置完成:${yum_baseip}"\033[39m"
if [ -n "$IP2" ];then
echo "TYPE=Ethernet
BOOTPROTO="static"
NAME=$inte2
DEVICE=$inte2
ONBOOT=yes
IPADDR=$ip2
PREFIX=$submask2" > /opt/tmp-tmp/etc/sysconfig/network-scripts/ifcfg-$inte2 && echo -e "虚拟机$virtname -----> \033[33m"IP地址配置完成:${inte2}:$ip2/$submask2"\033[39m"
fi

#配置ssh免密登录:
if [ ! -e /root/.ssh/id_rsa.pub ];then
    ssh-keygen -f /root/.ssh/id_rsa -N '' &> /dev/null
    eval $(ssh-agent -s) &> /dev/null
    ssh-add &> /dev/null
fi
mkdir /opt/tmp-tmp/root/.ssh/ &> /dev/null
cp -f /root/.ssh/id_rsa.pub /opt/tmp-tmp/root/.ssh/authorized_keys && echo -e "虚拟机$virtname -----> \033[33m"ssh免密登录配置完成"\033[39m"

#配置yum源:
if [ -e /opt/tmp-tmp/etc/yum.repos.d/local.repo ];then    
    sed -i "/baseurl=ftp/s@.*@baseurl=ftp://$yum_baseip/centos-1804@" /opt/tmp-tmp/etc/yum.repos.d/local.repo && echo -e "虚拟机$virtname -----> \033[33m"yum源配置完成:ftp://$yum_baseip/centos-1804"\033[39m"
else 
    echo "[id-centos-1804]
name=centos-1804 from real machine
baseurl=ftp://$yum_baseip/centos-1804
enabled=1
gpgcheck=0" > /opt/tmp-tmp/etc/yum.repos.d/centos-1804.repo && echo -e "虚拟机$virtname -----> \033[33m"yum源配置完成:ftp://$yum_baseip/centos-1804"\033[39m"
fi

#配置chronyd,实现开机后时间与真机同步:
sed -i "0,/iburst/{//s/.*/server $yum_baseip iburst\n&/}" /opt/tmp-tmp/etc/chrony.conf 

#配置虚拟机在开机时自动扩容:
echo "LANG=en growpart /dev/vda 1
xfs_growfs /dev/vda1" >> /opt/tmp-tmp/etc/rc.local    #写入开机执行的脚本中，实现自动扩容
chmod +x /opt/tmp-tmp/etc/rc.local    #添加执行权限

#修改虚拟机的欢迎界面:
vmpicture > /opt/tmp-tmp/etc/motd

#完成配置，卸载镜像文件：
umount /opt/tmp-tmp/
rm -rf /opt/tmp-tmp/

#修改xml文件内容
sed -i '/uuid/d' /etc/libvirt/qemu/${virtname}.xml &> /dev/null    #删除xml配置文件中的uuid,在导入虚拟机信息时,系统会自动生成新的uuid
sed -i '/mac add/d' /etc/libvirt/qemu/${virtname}.xml &> /dev/null    #删除xml配置文件中的网卡唯一标识(mac地址),在导入虚拟机信息时,系统会自动生成新的mac地址
sed -i "/<name>/s/backup/$virtname/" /etc/libvirt/qemu/${virtname}.xml &> /dev/null    #修改虚拟机的xml配置文件中的名称
sed -i "/source file/s/backup/$virtname/" /etc/libvirt/qemu/${virtname}.xml &> /dev/null    #修改xml配置文件中的磁盘镜像文件路径

#根据选择的网卡和IP设置,修改xml中使用的真实虚拟网卡
function devif {
	[ "$interface" == "eth0" ] && dev=private1 && tline=$(sed -n "/interface type/=" /etc/libvirt/qemu/${virtname}.xml | sed -n '1p')
	[ "$interface" == "eth1" ] && dev=private2 && tline=$(sed -n "/interface type/=" /etc/libvirt/qemu/${virtname}.xml | sed -n '2p')
	[ "$interface" == "eth2" ] && dev=public1 && tline=$(sed -n "/interface type/=" /etc/libvirt/qemu/${virtname}.xml | sed -n '3p')
	[ "$interface" == "eth3" ] && dev=public2 && tline=$(sed -n "/interface type/=" /etc/libvirt/qemu/${virtname}.xml | sed -n '4p')
	if [ "$brg" == "yes" ];then
		sed -i "${tline}s/.*/    <interface type='bridge'>/" /etc/libvirt/qemu/${virtname}.xml &> /dev/null
    	sed -i "/$interface/s@.*@      <source bridge='vbr'/>@" /etc/libvirt/qemu/${virtname}.xml &> /dev/null && echo -e "虚拟机$virtname -----> \033[33m"桥接外网配置完成:vbr"\033[39m"
	else
		case  ${ipmix%.*} in
	        192.168.4)
	            sed -i "/$interface/s/$dev/private1/" /etc/libvirt/qemu/${virtname}.xml &> /dev/null ;;
	        192.168.2)
	            sed -i "/$interface/s/$dev/private2/" /etc/libvirt/qemu/${virtname}.xml &> /dev/null ;;
	        201.1.1)
	            sed -i "/$interface/s/$dev/public1/" /etc/libvirt/qemu/${virtname}.xml &> /dev/null ;;
	        201.1.2)
	            sed -i "/$interface/s/$dev/public2/" /etc/libvirt/qemu/${virtname}.xml &> /dev/null ;;
	        *)
				echo -e "\033[31m警告:IP地址不能与真机虚拟网卡匹配,已使用默认配置\033[39m";;
	    esac
	fi	
}

for aa in $inte $inte2
do
    interface=$aa
    if [ "$interface" == "$inte" ];then
	ipmix=$ip
    elif [ "$interface" == "$inte2" ];then 
	ipmix=$ip2
    else 
	echo -e "\033[31m真机网卡配置使用默认配置\033[39m"
    	break
    fi
    devif
done
virsh define /etc/libvirt/qemu/${virtname}.xml  &> /dev/null && echo -e "虚拟机$virtname -----> \033[33m"虚拟机定义完成"\033[39m"  #导入新虚拟机信息,完成克隆操作
echo "完成!"
sleep 0.1
virsh start $virtname
